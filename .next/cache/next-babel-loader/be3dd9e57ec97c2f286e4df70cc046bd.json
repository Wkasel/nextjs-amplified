{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport produce from \"immer\";\n/*<IfTypescript>*/\n\n/*</IfTypescript>*/\nvar reducer\n/*: React.Reducer<State, Action>*/\n= function reducer(state, action) {\n  switch (action.type) {\n    case \"set-current\":\n      {\n        return produce(state, function (draft) {\n          draft.currentTodo = action.payload;\n        });\n      }\n\n    case \"add\":\n      {\n        return produce(state, function (draft) {\n          draft.todos.push(action.payload);\n        });\n      }\n\n    case \"update\":\n      {\n        var todoIndex = state.todos.findIndex(function (todo) {\n          return todo.id === action.payload.id;\n        });\n        if (todoIndex === -1) return state;\n        return produce(state, function (draft) {\n          draft.todos[todoIndex] = _objectSpread({}, action.payload);\n        });\n      }\n\n    case \"delete\":\n      {\n        var _todoIndex = state.todos.findIndex(function (todo) {\n          return todo.id === action.payload.id;\n        });\n\n        if (_todoIndex === -1) return state;\n        return produce(state, function (draft) {\n          draft.todos.splice(_todoIndex, 1);\n        });\n      }\n\n    default:\n      {\n        throw new Error(\"Unsupported action \".concat(JSON.stringify(action)));\n      }\n  }\n};\n\nexport default reducer;","map":null,"metadata":{},"sourceType":"module"}